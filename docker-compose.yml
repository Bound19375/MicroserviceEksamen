version: '3.4'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: api.gateway
    restart: always
    environment:
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      #- ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Timelost19375
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/oerumtechorigin.pfx
    ports:
      #- '80:80'
      - '443:443' 
    build:
      context: .
      dockerfile: apigateway/Dockerfile
    volumes:
      - ./Crosscutting/certs/:/app/certs/
      #- /home/bound/certs/:/app/certs/

  boundbot:
    image: ${DOCKER_REGISTRY-}boundbot
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: boundbotinfrastructure.oerumtechnologies.com
    environment:
      - ConnectionStrings__BoundcoreIdentity=server=OTnoprox.oerumtechnologies.com;port=19372;database=Boundcore.Identity;user=boundcore;password=19375Boundcore19375;AllowPublicKeyRetrieval=True;SslMode=preferred;
      - ConnectionStrings__BoundcoreMaster=server=OTnoprox.oerumtechnologies.com;port=19372;database=Boundcore.Master;user=boundcore;password=19375Boundcore19375;AllowPublicKeyRetrieval=True;SslMode=preferred;
    restart: always
    build:
      context: .
      dockerfile: BoundBot/Dockerfile

  api.auth:
    image: ${DOCKER_REGISTRY-}apiauth
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: api.auth.oerumtechnologies.com
    environment:
      - ConnectionStrings__BoundcoreIdentity=server=OTnoprox.oerumtechnologies.com;port=19372;database=Boundcore.Identity;user=boundcore;password=19375Boundcore19375;AllowPublicKeyRetrieval=True;SslMode=preferred;
      - ConnectionStrings__BoundcoreMaster=server=OTnoprox.oerumtechnologies.com;port=19372;database=Boundcore.Master;user=boundcore;password=19375Boundcore19375;AllowPublicKeyRetrieval=True;SslMode=preferred;
    restart: always
    build:
      context: .
      dockerfile: API.Auth/Dockerfile
      
  api.discordbot:
    image: ${DOCKER_REGISTRY-}apidiscordbot
    platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: api.discordbot.oerumtechnologies.com
    environment:
      - ConnectionStrings__BoundcoreIdentity=server=OTnoprox.oerumtechnologies.com;port=19372;database=Boundcore.Identity;user=boundcore;password=19375Boundcore19375;AllowPublicKeyRetrieval=True;SslMode=preferred;
      - ConnectionStrings__BoundcoreMaster=server=OTnoprox.oerumtechnologies.com;port=19372;database=Boundcore.Master;user=boundcore;password=19375Boundcore19375;AllowPublicKeyRetrieval=True;SslMode=preferred;
    restart: always
    build:
      context: .
      dockerfile: API.DiscordBot/Dockerfile


  ########
  rabbitMQ:
    image:  masstransit/rabbitmq:latest
    #platform: linux/arm64/v8
    container_name: rabbitMQ
    networks:
      - private_network
    hostname: rabbitMQ
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=rabbitmquser
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
        - persistedData:/var/lib/rabbitmq/
        - persistedData:/var/log/rabbitmq

  db:
    image: mariadb:latest
    #platform: linux/arm64/v8
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - persistedData:/var/lib/mysql
    ports:
      - "3306:3306"

networks:
  private_network:
   driver: bridge

volumes:
  persistedData:



