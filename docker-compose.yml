version: '3.4'

services:
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: api.gateway
    restart: always
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_Kestrel__Certificates__Default__Password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${ASPNETCORE_Kestrel__Certificates__Default__Path}
    ports:
      - '443:443' 
    build:
      context: .
      dockerfile: apigateway/Dockerfile
    volumes:
      - persistedData:/app/certs/
      - ./Crosscutting/certs/:/app/certs/

  boundbot:
    image: ${DOCKER_REGISTRY-}boundbot
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: boundbotinfrastructure.oerumtechnologies.com
    environment:
      - ConnectionStrings__BoundcoreMaster=${ConnectionStrings__BoundcoreMaster}
      - JWT__ValidIssuer=${JWTValidUssuer}
      - JWT__ValidAudience${JWTValidAudience}
      - JWT__SecretKey=${JWTSecretKey}
      - RabbitMQ__User=${RabbitMQUser} 
      - RabbitMQ__Pass=${rabbitmqpass}
      - HttpClient__connStr=${DiscordbotHttpClientconnStr}
      - Discord__Token=${DiscordToken}
      - Discord__Guid=${DiscordGuid} 
    restart: always
    build:
      context: .
      dockerfile: BoundBot/Dockerfile

  api.auth:
    image: ${DOCKER_REGISTRY-}apiauth
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: api.auth.oerumtechnologies.com
    environment:
      - ConnectionStrings__BoundcoreMaster=${ConnectionStrings__BoundcoreMaster}
      - JWT__ValidIssuer=${JWTValidUssuer}
      - JWT__ValidAudience${JWTValidAudience}
      - JWT__SecretKey=${JWTSecretKey}
      - RabbitMQ__User=${rabbitmquser} 
      - RabbitMQ__Pass=${rabbitmqpass}
      - Discord__Token=${DiscordToken}
      - Discord__Guid=${DiscordGuid} 
    restart: always
    build:
      context: .
      dockerfile: API.Auth/Dockerfile
      
  api.discordbot:
    image: ${DOCKER_REGISTRY-}apidiscordbot
    #platform: linux/arm64/v8
    networks: 
      - private_network
    hostname: api.discordbot.oerumtechnologies.com
    environment:
      - ConnectionStrings__BoundcoreMaster=${ConnectionStrings__BoundcoreMaster}
      - JWT__ValidIssuer=${JWTValidUssuer}
      - JWT__ValidAudience${JWTValidAudience}
      - JWT__SecretKey=${JWTSecretKey}
      - RabbitMQ__User=${rabbitmquser} 
      - RabbitMQ__Pass=${rabbitmqpass}
      - Discord__Token=${DiscordToken}
      - Discord__Guid=${DiscordGuid} 
    restart: always
    build:
      context: .
      dockerfile: API.DiscordBot/Dockerfile

  rabbitMQ:
    image:  masstransit/rabbitmq:latest
    #platform: linux/arm64/v8
    container_name: rabbitMQ
    networks:
      - private_network
    hostname: rabbitMQ
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - persistedData:/var/lib/rabbitmq/
      - persistedData:/var/log/rabbitmq
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  mariaDB:
    image: mariadb:latest
    #platform: linux/arm64/v8
    env_file:
     - .env
    container_name: mariadb
    environment:
      ACCEPT_EULA: Y
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - persistedData:/var/lib/mysql
    ports:
      - "3306:3306"

networks:
  private_network:
   driver: bridge

volumes:
  persistedData:


